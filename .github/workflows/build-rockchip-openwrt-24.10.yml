name: build-rockchip-openwrt-24.10

on:
  workflow_dispatch:
    inputs:
      profile:
        type: choice
        description: '输入软路由型号，可选值如下：'
        options:
          - friendlyarm_nanopi-r2s
        required: true
        default: 'friendlyarm_nanopi-r2s'
      rootfs_partsize:
        description: '设置软件包大小，单位(MB)'
        required: true
        default: '1024'
      lan_ip:
        description: '设置 LAN IP 地址'
        required: true
        default: '192.168.100.1'
      enable_pppoe:
        description: '是否配置 PPPoE 拨号信息？'
        required: true
        default: 'no'
        type: choice
        options:
        - 'yes'
        - 'no'
      pppoe_account:
        description: '宽带账号 (若启用PPPoE)'
        required: false
      pppoe_password:
        description: '宽带密码 (若启用PPPoE)'
        required: false

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up OpenWRT build environment
        run: |
          sudo apt update
          sudo apt install build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev \
          python3-distutils python3-setuptools rsync swig unzip zlib1g-dev file wget
      
      - name: Validate PPPoE Inputs
        run: |
          if [[ "${{ inputs.enable_pppoe }}" == "yes" ]]; then
            if [[ -z "${{ inputs.pppoe_account }}" || -z "${{ inputs.pppoe_password }}" ]]; then
              echo "Error: PPPoE account and password must be provided when PPPoE is enabled!"
              exit 1
            fi
          fi
      
      - name: Clone OpenWRT source code
        run: |
          git clone https://git.openwrt.org/openwrt/openwrt.git
          cd openwrt
          git pull
          git checkout v24.10.0-rc6

      - name: Customize seeds
        run: |
          cat >> feeds.conf.default <<EOF
          src-git passwall https://github.com/xiaorouji/openwrt-passwall.git
          src-git passwallpackages https://github.com/xiaorouji/openwrt-passwall-packages.git
          EOF
      
      - name: Update the feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          ./scripts/feeds install -a
      
      - name: Copy pre-existing .config file
        run: |
          cp ${{ github.workspace }}/rockchip/imm.config openwrt/.config
      
      - name: Set LAN IP and PPPoE credentials
        run: |
          # 修改 network 配置文件中的 LAN IP
          sed -i "s/option ipaddr '192.168.1.1'/option ipaddr '${{ github.event.inputs.lan_ip }}'/g" openwrt/files/etc/config/network
          # 配置 WAN 接口为 PPPoE，并添加用户名和密码
          sed -i '/config interface "wan"/a\ \ \ \ option proto "pppoe"' openwrt/files/etc/config/network
          sed -i "/config interface 'wan'/a\ \ \ \ option username '${{ github.event.inputs.pppoe_username }}'" openwrt/files/etc/config/network
          sed -i "/config interface 'wan'/a\ \ \ \ option password '${{ github.event.inputs.pppoe_password }}'" openwrt/files/etc/config/network
      
      - name: Set root filesystem size
        run: |
          # 更新 CONFIG_TARGET_ROOTFS_PARTSIZE 配置
          cd openwrt
          sed -i "s/^CONFIG_TARGET_ROOTFS_PARTSIZE=.*/CONFIG_TARGET_ROOTFS_PARTSIZE=${{ github.event.inputs.rootfs_size }}/" .config
      
      - name: Building Rockchip OpenWrt
        run: make
      
      - name: Generate Firmware SHA-256
        run: |
          cp ${{ github.workspace }}/bin/targets/rockchip/armv8/*.img.gz ${{ github.workspace }}
          for file in *.img.gz; do
            sha256sum "$file" > "$file.sha256"
            sha256sum -c "$file.sha256"
          done
      
      - name: Upload OpenWrt as release assets
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: Autobuild
          name: OpenWrt-Rockchip
          body_path: ${{ github.workspace }}/info.md
          files: |
            ${{ github.workspace }}/*.img.gz
            ${{ github.workspace }}/*.sha256
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
